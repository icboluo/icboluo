{
  "author": "icboluo",
  "version": "1.2.4",
  "userSecure": "",
  "currTypeMapperGroupName": "Default",
  "currTemplateGroupName": "user",
  "currColumnConfigGroupName": "Default",
  "currGlobalConfigGroupName": "Default",
  "typeMapper": {
    "Default": {
      "name": "Default",
      "elementList": [
        {
          "columnType": "varchar(\\(\\d+\\))?",
          "javaType": "java.lang.String"
        },
        {
          "columnType": "char(\\(\\d+\\))?",
          "javaType": "java.lang.String"
        },
        {
          "columnType": "text",
          "javaType": "java.lang.String"
        },
        {
          "columnType": "decimal(\\(\\d+\\))?",
          "javaType": "java.lang.Double"
        },
        {
          "columnType": "decimal(\\(\\d+,\\d+\\))?",
          "javaType": "java.math.BigDecimal"
        },
        {
          "columnType": "integer",
          "javaType": "java.lang.Integer"
        },
        {
          "columnType": "int(\\(\\d+\\))?",
          "javaType": "java.lang.Integer"
        },
        {
          "columnType": "int4",
          "javaType": "java.lang.Integer"
        },
        {
          "columnType": "int8",
          "javaType": "java.lang.Long"
        },
        {
          "columnType": "bigint(\\(\\d+\\))?",
          "javaType": "java.lang.Long"
        },
        {
          "columnType": "datetime",
          "javaType": "java.time.LocalDateTime"
        },
        {
          "columnType": "timestamp",
          "javaType": "java.time.LocalDateTime"
        },
        {
          "columnType": "boolean",
          "javaType": "java.lang.Boolean"
        },
        {
          "columnType": "date",
          "javaType": "java.time.LocalDate"
        }
      ]
    }
  },
  "template": {
    "user": {
      "name": "user",
      "elementList": [
        {
          "name": "entity.java",
          "code": "##����궨��\n$!define\n\n##ʹ�ú궨�����ûص�������λ�����ļ���׺��\n#save(\"/entity\", \".java\")\n\n##ʹ�ú궨�����ð���׺\n#setPackageSuffix(\"entity\")\n\n##ʹ��ȫ�ֱ���ʵ��Ĭ�ϰ�����\n$!autoImport\nimport java.io.Serializable;\nimport lombok.Data;\n\n##ʹ�ú궨��ʵ����ע����Ϣ\n#tableComment(\"ʵ����\")\n@Data\npublic class $!{tableInfo.name} implements Serializable {\n#foreach($column in $tableInfo.fullColumn)\n    #if(${column.comment})/**\n    * ${column.comment}\n    */#end\n\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n\n    private static final long serialVersionUID = $!tool.serial();\n}"
        },
        {
          "name": "mapper.xml",
          "code": "##����mybatis֧��\n$!mybatisSupport\n\n##���ñ��������뱣��λ��\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##�õ�����\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper\">\n\n    <resultMap id=\"$!{tableInfo.name}Map\" type=\"$!{tableInfo.savePackageName}.entity.$!{tableInfo.name}\" >\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" jdbcType=\"$!column.ext.jdbcType\"/>\n#end\n    </resultMap>\n    <sql id=\"Base_Column_List\">\n        #allSqlColumn()\n        \n    </sql>\n    \n        <!--ͨ��ʵ����Ϊɸѡ������ѯ-->\n    <select id=\"queryAllByData\" resultMap=\"$!{tableInfo.name}Map\">\n        select\n         <include refid=\"Base_Column_List\"/>\n        from $!tableInfo.obj.name\n        <where>\n#foreach($column in $tableInfo.fullColumn)\n            <if test=\"$!column.name != null#if($column.type.equals(\"java.lang.String\")) and $!column.name != ''#end\">\n                and $!column.obj.name = #{$!column.name}\n            </if>\n#end\n        </where>\n    </select>\n    \n    <insert id=\"insertBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n        (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n    </insert>\n\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n        on duplicate key update\n         #foreach($column in $tableInfo.otherColumn)$!column.obj.name = values($!column.obj.name) #if($velocityHasNext), #end#end\n    </insert>\n</mapper>\n"
        },
        {
          "name": "dao.java",
          "code": "##�����ʼ����\n#set($tableName = $tool.append($tableInfo.name, \"Mapper\"))\n##���ûص�\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/mapper\"))\n\n##�õ�����\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}mapper;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport org.apache.ibatis.annotations.Param;\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})�����ݿ���ʲ�\n *\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{tableName} extends MyBaseMapper<$!{tableInfo.name}> {\n\n    /**\n     * ͨ��ʵ����Ϊɸѡ������ѯ\n     *\n     * @param $!tool.firstLowerCase($!{tableInfo.name}) ʵ������\n     * @return �����б�\n     */\n    List<$!{tableInfo.name}> queryAllByData($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));\n\n    /**\n     * �����������ݣ�MyBatisԭ��foreach������\n     *\n     * @param entities List<$!{tableInfo.name}> ʵ�������б�\n     * @return Ӱ������\n     */\n    int insertBatch(List<$!{tableInfo.name}> entities);\n\n    /**\n     * ���������������������ݣ�MyBatisԭ��foreach������\n     *\n     * @param entities List<$!{tableInfo.name}> ʵ�������б�\n     * @return Ӱ������\n     */\n    int insertOrUpdateBatch(List<$!{tableInfo.name}> entities);\n}\n"
        },
        {
          "name": "service.java",
          "code": "##�����ʼ����\n#set($tableName = $tool.append($tableInfo.name, \"Service\"))\n##���ûص�\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service\"))\n\n##�õ�����\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})�����ӿ�\n *\n * @author $!author\n * @since $!time.currTime()\n */\npublic interface $!{tableName} {\n\n    /**\n     * ͨ��ID��ѯ��������\n     *\n     * @param $!pk.name ����\n     * @return ʵ������\n     */\n    $!{tableInfo.name} queryById($!pk.shortType $!pk.name);\n\n}"
        },
        {
          "name": "serviceImpl.java",
          "code": "##�����ʼ����\n#set($tableName = $tool.append($tableInfo.name, \"ServiceImpl\"))\n##���ûص�\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/service/impl\"))\n\n##�õ�����\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.stereotype.Service;\n\nimport javax.annotation.Resource;\nimport java.util.List;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})�����ʵ����\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@Service\npublic class $!{tableName} implements $!{tableInfo.name}Service {\n    @Resource\n    private $!{tableInfo.name}Mapper $!tool.firstLowerCase($!{tableInfo.name})Mapper;\n\n    /**\n     * ͨ��ID��ѯ��������\n     *\n     * @param $!pk.name ����\n     * @return ʵ������\n     */\n    @Override\n    public $!{tableInfo.name} queryById($!pk.shortType $!pk.name) {\n        return $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.queryById($!pk.name);\n    }\n}"
        },
        {
          "name": "controller.java",
          "code": "##�����ʼ����\n#set($tableName = $tool.append($tableInfo.name, \"Controller\"))\n##���ûص�\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/controller\"))\n##�õ�����\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;\n\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.annotation.Resource;\n\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})����Ʋ�\n *\n * @author $!author\n * @since $!time.currTime()\n */\n@RestController\n@RequestMapping(\"/$!tool.firstLowerCase($tableInfo.name)\")\npublic class $!{tableName} {\n    /**\n     * �������\n     */\n    @Resource\n    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;\n\n    /**\n     * ͨ��������ѯ��������\n     *\n     * @param id ����\n     * @return ��������\n     */\n    @GetMapping(\"/selectOne\")\n    public $!{tableInfo.name} selectOne($!pk.shortType id) {\n        return $!{tool.firstLowerCase($tableInfo.name)}Service.queryById(id);\n    }\n\n}"
        }
      ]
    }
  },
  "columnConfig": {},
  "globalConfig": {}
}
