<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--    clean的时候有时候会出现 Process terminated （加工终止-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.5</version>
        <!--        relativePath元素中的地址–>本地仓库–>远程仓库-->
        <!--        如为空值将始终从仓库中获取，不从本地路径获取-->
        <!--        设定一个空值将始终从仓库中获取，不从本地路径获取，子模块禁止添加这个-->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <!--    必须在这个modules里面加各个module，否则编译器无法识别改module为一个项目-->
    <!--    编辑器build的时候，启动项目只和相关的服务产生关联，其他的pom不通过，不影响当前项目的启动
    微服务项目构建过程中，之和相关的依赖产生关系
    -->
    <modules>
        <module>icboluo-algorithm</module>
        <module>icboluo-common</module>
        <module>icboluo-common/icboluo-base</module>
        <module>icboluo-common/icboluo-supper</module>
        <module>icboluo-common/icboluo-mapper</module>
        <module>icboluo-framework</module>
        <module>icboluo-fund</module>
        <module>icboluo-gateway</module>
        <module>icboluo-nacos-config</module>
        <module>icboluo-note</module>
        <module>icboluo-se</module>
        <module>icboluo-software</module>
        <module>icboluo-sql</module>
        <module>icboluo-test</module>
        <module>icboluo-user</module>
        <module>icboluo-web</module>
    </modules>

    <groupId>com.icboluo</groupId>
    <artifactId>icboluo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>icboluo</name>
    <!--    申明是一个父工程-->
    <packaging>pom</packaging>

    <!--统一管理jar包和版本-->
    <!-- maven仓库地址   https://mvnrepository.com/ -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!--公共插件-->
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.12</log4j.version>
        <lombok.version>1.18.20</lombok.version>
        <common.version>0.0.1-SNAPSHOT</common.version>
        <!--web -->
        <httpcore.version>4.4.14</httpcore.version>
        <httpclient.version>4.5.13</httpclient.version>
        <javax.servlet.version>4.0.1</javax.servlet.version>
        <!--mapper -->
        <mysql.version>8.0.22</mysql.version>
        <druid.verison>1.2.5</druid.verison>
        <mybatis.spring.boot.verison>2.1.1</mybatis.spring.boot.verison>
        <mybatis.plus.verison>3.4.3.1</mybatis.plus.verison>
        <pagehelper.version>1.3.0</pagehelper.version>
        <!--alibaba -->
        <alibaba.fastjson.verison>1.2.75</alibaba.fastjson.verison>
        <alibaba.dependencies.verison>2.2.5.RELEASE</alibaba.dependencies.verison>
        <nacos.verison>2021.1</nacos.verison>
        <easyexcel.version>2.2.7</easyexcel.version>
        <!--校验器        -->
        <validation.api.version>2.0.1.Final</validation.api.version>
        <hibernate.validator.version>7.0.1.Final</hibernate.validator.version>
        <!--公共包-->
        <hutool.all.version>5.6.6</hutool.all.version>
        <common.io.version>2.8.0</common.io.version>
        <!--cloud-->
        <cloud.dependencies.version>2020.0.4</cloud.dependencies.version>

        <swagger.verison>3.0.0</swagger.verison>
        <jakarta.activation.version>2.0.0</jakarta.activation.version>
    </properties>

    <!--    子模块继承以后，提供作用：锁定版本+子module不用写groupId和version-->
    <!--    只是申明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖-->
    <!--    内容和plugs中的内容是一样的，不过这个表示可以让子pom继承使用，子pom使用的使用，不用继续写version-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${cloud.dependencies.version}</version>
                <type>pom</type>
                <!--                scope 标签代表 依赖范围控制哪些依赖在哪些classpath 中可用，哪些依赖包含在一个应用中-->
                <!--                import仅支持在<dependencyManagement>中的类型依赖项上。它表示要在指定的POM <dependencyManagement>部分中用有效的依赖关系列表替换的依赖关系。该scope类型的依赖项实际上不会参与限制依赖项的可传递性-->
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${nacos.verison}</version>
                <!--                排除的依赖在maven中显示为灰色，代表jar包没有引用进来-->
                <exclusions>
                    <exclusion>
                        <artifactId>jsr305</artifactId>
                        <groupId>com.google.code.findbugs</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>HdrHistogram</artifactId>
                        <groupId>org.hdrhistogram</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.verison}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba.dependencies.verison}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--            引这个依赖才可以选择多个mysql driver class name-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${swagger.verison}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
                <!--                禁止删这个包，会导致 cglib包找不到，导出异常-->

                <!--                <exclusions>-->
                <!--                    <exclusion>-->
                <!--                        <artifactId>asm</artifactId>-->
                <!--                        <groupId>org.ow2.asm</groupId>-->
                <!--                    </exclusion>-->
                <!--                </exclusions>-->
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba.fastjson.verison}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcore.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--jsr 303-->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation.api.version}</version>
            </dependency>
            <!-- hibernate validator-->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.activation</groupId>
                <artifactId>jakarta.activation</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.all.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${common.io.version}</version>
            </dependency>
            <!--        包含javax.servlet.http.HttpServletResponse -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>3.11.0</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.verison}</version>
            </dependency>
            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>5.9.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
