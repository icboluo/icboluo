package com.icboluo.leetcode;

/**
 * @author icboluo
 * @since 2022-11-21 13:20
 */
public class DoubleArrDemo {
    public static void main(String[] args) {
        @SuppressWarnings("all") int[][] arr = {
                {1, 2, 3, 4, 5},// -----------------------------------
                {6, 7, 8, 9, 0},// -----------------------------------
                {2, 4, 6, 8, 1},// -----------------------------------
        };
        // 我们认为宽为5高为3
        // 在数组构成上，二维数组由一维构成，该数组的一维的宽度是5，所以二维的高度为3
        System.out.println("二维数组的一维数量||二维数组的高：---> " + arr.length);
        // 在表达形式上，可以由左向右读，二维高度为3，一维宽度为5
        System.out.println("该数组的表达形式为：---> " + new int[3][5].length);
        // 假定左上角为0,0点，且右下为坐标轴的方向，则上下左右移动之后的坐标分别为
        // 这个假定相当重要，解决图中坐标移动问题的重要先决条件：{0,-1}，{0,1}，{-1,0}，{1,0}
        // 当前点的坐标arr[y][x]，我们得出的结论是二维数组的xy要反过来，方法的x，y不用
        // 综述：用g和k来表示高宽更加容易理解一点;x，y代表坐标，i，j代表 行row，列col
    }
}
