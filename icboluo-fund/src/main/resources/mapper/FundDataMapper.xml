<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icboluo.mapper.FundDataMapper">

    <resultMap id="BaseResultMap" type="com.icboluo.entity.FundData">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="fundId" column="fund_id" jdbcType="VARCHAR"/>
        <result property="increaseRateDay" column="increase_rate_day" jdbcType="DECIMAL"/>
        <result property="netValueDate" column="net_value_date" jdbcType="TIMESTAMP"/>
        <result property="netAssetValue" column="net_asset_value" jdbcType="DECIMAL"/>
        <result property="netValueCumulative" column="net_value_cumulative" jdbcType="DECIMAL"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, fund_id, increase_rate_day, net_value_date, net_asset_value, net_value_cumulative, create_time, update_time
    </sql>

    <select id="selectByFundId" resultType="com.icboluo.entity.FundData">
        select *
        from fund_data
        where fund_id = #{fundId}
        order by net_value_date
    </select>
    <select id="selectByQuery" resultType="com.icboluo.object.vo.FundDataVO">
        select fd.*
        from fund_data fd
        <where>
            <if test="fundId != null and fundId != ''">
                and fd.fund_id = #{fundId}
            </if>
            <if test="startDate != null">
                and fd.net_value_date >= #{startDate}
            </if>
            <if test="endDate != null">
                and fd.net_value_date <![CDATA[ <=]]> #{endDate}
            </if>
        </where>
        order by fd.net_value_date desc
    </select>
    <select id="selectChooseDate" resultType="com.icboluo.object.vo.FundDataVO">
        select *
        from fund_data
        where fund_id = #{fundId}
          and net_value_date >= #{chooseDate}
        order by net_value_date
        limit #{chooseDateLength}
    </select>
    <select id="selectChooseAll" resultType="com.icboluo.object.vo.FundDataVO">
        select *
        from fund_data
        where fund_id = #{fundId}
        order by net_value_date
    </select>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into fund_data(fund_id, increase_rate_day, net_value_date, net_asset_value,
        net_value_cumulative, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.fundId}, #{entity.increaseRateDay}, #{entity.netValueDate},
            #{entity.netAssetValue}, #{entity.netValueCumulative}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into fund_data(fund_id, increase_rate_day, net_value_date, net_asset_value,
        net_value_cumulative, create_time, update_time)
        values
        <foreach collection="list" item="entity" separator=",">
            (#{entity.fundId}, #{entity.increaseRateDay}, #{entity.netValueDate},
            #{entity.netAssetValue}, #{entity.netValueCumulative}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        fund_id = values(fund_id),
        increase_rate_day = values(increase_rate_day),
        net_value_date = values(net_value_date),
        net_asset_value = values(net_asset_value),
        net_value_cumulative = values(net_value_cumulative),
        create_time = values(create_time),
        update_time = values(update_time)
    </insert>

    <delete id="deleteByFundId">
        delete
        from fund_data
        where fund_id = #{fundId}
    </delete>
    <delete id="deleteByFundIdDate">
        delete
        from fund_data
        where fund_id = #{fundId}
          and net_value_date = #{date}
    </delete>
</mapper>

